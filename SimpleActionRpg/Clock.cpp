//***************************************************************************************************************************************************
//
// File Name: Clock.cpp
//
// Description:
//  TODO: Add file description.
//
// Change History:
//  Author               Date           Description
//  Matthew D. Yorke     MM/DD/2018     TODO: Add history update
//
//***************************************************************************************************************************************************

#include "Clock.h"

//***************************************************************************************************************************************************
// Start Public Method Definitions
//***************************************************************************************************************************************************

//***************************************************************************************************************************************************
//
// Method Name: ShadowLayer
//
// Description:
//  TODO: Add method description.
//
//***************************************************************************************************************************************************
Clock::Clock(float theSecondsInMinute)
{
   mTimeUntilTick = mSecondsInMinute = theSecondsInMinute;
   mMinute = 0;
   mHour = 0;
}

//***************************************************************************************************************************************************
//
// Method Name: GetTimeString
//
// Description:
//  TODO: Add method description.
//
//***************************************************************************************************************************************************
std::string Clock::GetTimeString()
{
   std::string returnString = "";

   if (mHour < 10)
   {
      returnString += "0";
   }

   returnString += std::to_string(mHour) + ":";

   if (mMinute < 10)
   {
      returnString += "0";
   }

   returnString += std::to_string(mMinute);

   return returnString;
}

//***************************************************************************************************************************************************
//
// Method Name: Update
//
// Description:
//  TODO: Add method description.
//
//***************************************************************************************************************************************************
void Clock::Update(float theTimeChange)
{
   mTimeUntilTick -= theTimeChange;

   if (mTimeUntilTick < 0.0F)
   {
      mTimeUntilTick = mSecondsInMinute;

      mMinute++;

      if (mMinute == 60)
      {
         mMinute = 0;
         mHour++;

         if (mHour == 24)
         {
            mHour = 0;
         }
      }
   }
}

//***************************************************************************************************************************************************
// End Public Method Definitions
//***************************************************************************************************************************************************

//***************************************************************************************************************************************************
// Start Protected Method Definitions
//***************************************************************************************************************************************************



//***************************************************************************************************************************************************
// End Protected Method Definitions
//***************************************************************************************************************************************************

//***************************************************************************************************************************************************
// Start Private Method Definitions
//***************************************************************************************************************************************************



//***************************************************************************************************************************************************
// End Private Method Definitions
//***************************************************************************************************************************************************