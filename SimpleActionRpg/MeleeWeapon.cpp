//***************************************************************************************************************************************************
//
// File Name: MeleeWeapon.cpp
//
// Description:
//  TODO: Add file description.
//
// Change History:
//  Author               Date           Description
//  Matthew D. Yorke     MM/DD/2018     TODO: Add history update
//
//***************************************************************************************************************************************************

#include <allegro5/allegro_primitives.h>
#include "MeleeWeapon.h"

//***************************************************************************************************************************************************
// Start Public Method Definitions
//***************************************************************************************************************************************************

//***************************************************************************************************************************************************
//
// Method Name: MeleeWeapon
//
// Description:
//  TODO: Add method description.
//
//***************************************************************************************************************************************************
MeleeWeapon::MeleeWeapon(Graphics& theGraphics, int theDamage)
{
   mDamage = theDamage;
   mpSprite = new AnimatedSprite(theGraphics,
                                 "../Images/TestSword.png",
                                 0,
                                 0,
                                 118,
                                 160,
                                 6,
                                 3);

   mWeaponWidth = 25;
   mWeaponHeight = 48;

   mpHitBox = new Rectangle(0,
                            0,
                            0,
                            0);
   mDirection = PlayerConstants::DIRECTION::DOWN;
}

//************************************************************************************************************************************************
//
// Method Name: SetDirection
//
// Description:
//  TODO: Add description.
//
//************************************************************************************************************************************************
void MeleeWeapon::SetDirection(PlayerConstants::DIRECTION theDirection)
{
   mDirection = theDirection;
}

//************************************************************************************************************************************************
//
// Method Name: GetSprite
//
// Description:
//  TODO: Add description.
//
//************************************************************************************************************************************************
AnimatedSprite* MeleeWeapon::GetSprite()
{
   return mpSprite;
}

//************************************************************************************************************************************************
//
// Method Name: DrawSprite
//
// Description:
//  TODO: Add description.
//
//************************************************************************************************************************************************
void MeleeWeapon::DrawSprite(Graphics& theGraphics, int theCoordianteX, int theCoordinateY)
{
      mpSprite->Draw(theGraphics,
                     theCoordianteX,
                     theCoordinateY);

      al_draw_rectangle(mpHitBox->GetCoordinateX(),
                        mpHitBox->GetCoordinateY(),
                        mpHitBox->GetCoordinateX() + mpHitBox->GetWidth(),
                        mpHitBox->GetCoordinateY() + mpHitBox->GetHeight(),
                        al_map_rgb(0,255,0),
                        1);
}

//***************************************************************************************************************************************************
// End Public Method Definitions
//***************************************************************************************************************************************************

//***************************************************************************************************************************************************
// Start Protected Method Definitions
//***************************************************************************************************************************************************



//***************************************************************************************************************************************************
// End Protected Method Definitions
//***************************************************************************************************************************************************

//***************************************************************************************************************************************************
// Start Private Method Definitions
//***************************************************************************************************************************************************



//***************************************************************************************************************************************************
// End Private Method Definitions
//***************************************************************************************************************************************************